{
  "name": "srleecode-domain-generators",
  "displayName": "@srleecode/domain-generators",
  "description": "Extension for triggering nx domain generators",
  "repository": "https://github.com/srleecode/vscode-domain-generators-extension",
  "version": "1.0.2",
  "engines": {
    "vscode": "^1.62.0"
  },
  "categories": [
    "Other"
  ],
  "publisher": "srleecode",
  "activationEvents": [
    "onCommand:domain-generators.appGroupingFolder",
    "onCommand:domain-generators.domainGroupingFolder",
    "onCommand:domain-generators.moveGroupingFolder",
    "onCommand:domain-generators.removeGroupingFolder",
    "onCommand:domain-generators.ngApplicationLayer",
    "onCommand:domain-generators.ngComponent",
    "onCommand:domain-generators.ngDataAccessLayer",
    "onCommand:domain-generators.ngDirective",
    "onCommand:domain-generators.ngDomainLayer",
    "onCommand:domain-generators.ngUtilLayer",
    "onCommand:domain-generators.domainTest",
    "onCommand:domain-generators.ngRemoveLibrary",
    "onCommand:domain-generators.mockFile",
    "onCommand:domain-generators.lint",
    "onCommand:domain-generators.test",
    "onCommand:domain-generators.ct",
    "onCommand:domain-generators.e2e",
    "onCommand:domain-generators.update-barrel"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "domain-generators.appGroupingFolder",
        "title": "Create app grouping folder"
      },
      {
        "command": "domain-generators.domainGroupingFolder",
        "title": "Create domain grouping folder"
      },
      {
        "command": "domain-generators.moveGroupingFolder",
        "title": "Move grouping folder"
      },
      {
        "command": "domain-generators.removeGroupingFolder",
        "title": "Remove grouping folder"
      },
      {
        "command": "domain-generators.ngRemoveLibrary",
        "title": "Remove domain library"
      },
      {
        "command": "domain-generators.mockFile",
        "title": "Create mock files in domain library"
      },
      {
        "command": "domain-generators.ngApplicationLayer",
        "title": "Create application layer"
      },
      {
        "command": "domain-generators.ngComponent",
        "title": "Create component"
      },
      {
        "command": "domain-generators.ngDataAccessLayer",
        "title": "Create data-access layer"
      },
      {
        "command": "domain-generators.ngDirective",
        "title": "Create directive"
      },
      {
        "command": "domain-generators.ngDomainLayer",
        "title": "Create domain layer"
      },
      {
        "command": "domain-generators.ngUtilLayer",
        "title": "Create util layer"
      },
      {
        "command": "domain-generators.domainTest",
        "title": "Create tests for domain"
      },
      {
        "command": "domain-generators.lint",
        "title": "Run domain library lint"
      },
      {
        "command": "domain-generators.test",
        "title": "Run domain library test"
      },
      {
        "command": "domain-generators.ct",
        "title": "Run domain library component tests"
      },
      {
        "command": "domain-generators.e2e",
        "title": "Run domain e2e tests"
      },
      {
        "command": "domain-generators.update-barrel",
        "title": "Update barrel"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "domain-generators.appGroupingFolder",
          "group": "1+groupingFolder@1",
          "when": "resourcePath =~ /libs$/"
        },
        {
          "command": "domain-generators.domainGroupingFolder",
          "group": "1+groupingFolder@2",
          "when": "resourcePath =~ /libs([/\\\\](?!(application|data-access|domain|feature|directive|shell|ui|util))[^./\\\\]+)+$/"
        },
        {
          "command": "domain-generators.moveGroupingFolder",
          "group": "1+groupingFolder@3",
          "when": "resourcePath =~ /libs([/\\\\](?!(application|data-access|domain|feature|directive|shell|ui|util))[^./\\\\]+)+$/"
        },
        {
          "command": "domain-generators.removeGroupingFolder",
          "group": "1+groupingFolder@4",
          "when": "resourcePath =~ /libs([/\\\\](?!(application|data-access|domain|feature|directive|shell|ui|util))[^./\\\\]+)+$/"
        },
        {
          "command": "domain-generators.ngRemoveLibrary",
          "group": "1+domainLibrary@1",
          "when": "resourcePath =~ /libs[/\\\\].+[/\\\\](application|data-access|domain|feature|directive|shell|ui|util).*$/"
        },
        {
          "command": "domain-generators.mockFile",
          "group": "1+domainLibrary@2",
          "when": "resourcePath =~ /libs[/\\\\].+[/\\\\](domain).*$/"
        },
        {
          "command": "domain-generators.ngApplicationLayer",
          "group": "2+domainGroupingFolder@1",
          "when": "resourcePath =~ /libs[/\\\\].+([/\\\\](?!(application|data-access|domain|feature|directive|shell|ui|util))[^./\\\\]+)+$/"
        },
        {
          "command": "domain-generators.ngComponent",
          "group": "2+domainGroupingFolder@2",
          "when": "resourcePath =~ /libs[/\\\\].+([/\\\\](?!(application|data-access|domain|feature|directive|shell|ui|util))[^./\\\\]+)+$/"
        },
        {
          "command": "domain-generators.ngDataAccessLayer",
          "group": "2+domainGroupingFolder@3",
          "when": "resourcePath =~ /libs[/\\\\].+([/\\\\](?!(application|data-access|domain|feature|directive|shell|ui|util))[^./\\\\]+)+$/"
        },
        {
          "command": "domain-generators.ngDirective",
          "group": "2+domainGroupingFolder@4",
          "when": "resourcePath =~ /libs[/\\\\].+([/\\\\](?!(application|data-access|domain|feature|directive|shell|ui|util))[^./\\\\]+)+$/"
        },
        {
          "command": "domain-generators.ngDomainLayer",
          "group": "2+domainGroupingFolder@5",
          "when": "resourcePath =~ /libs[/\\\\].+([/\\\\](?!(application|data-access|domain|feature|directive|shell|ui|util))[^./\\\\]+)+$/"
        },
        {
          "command": "domain-generators.ngUtilLayer",
          "group": "2+domainGroupingFolder@6",
          "when": "resourcePath =~ /libs[/\\\\].+([/\\\\](?!(application|data-access|domain|feature|directive|shell|ui|util))[^./\\\\]+)+$/"
        },
        {
          "command": "domain-generators.domainTest",
          "group": "2+domainGroupingFolder@7",
          "when": "resourcePath =~ /libs[/\\\\].+([/\\\\](?!(application|data-access|domain|feature|directive|shell|ui|util))[^./\\\\]+)+$/"
        },
        {
          "command": "domain-generators.lint",
          "group": "3+domainRun@1",
          "when": "resourcePath =~ /libs[/\\\\].+[/\\\\](application|data-access|domain|feature|directive|shell|ui|util).*$/"
        },
        {
          "command": "domain-generators.test",
          "group": "3+domainRun@2",
          "when": "resourcePath =~ /libs[/\\\\].+[/\\\\](application|data-access|domain|feature|directive|shell|ui|util).*$/"
        },
        {
          "command": "domain-generators.ct",
          "group": "3+domainRun@3",
          "when": "resourcePath =~ /libs[/\\\\].+[/\\\\](feature|directive|shell|ui).*$/"
        },
        {
          "command": "domain-generators.e2e",
          "group": "3+domainRun@4",
          "when": "resourcePath =~ /libs[/\\\\].+[/\\\\]\\.e2e.*$/"
        },
        {
          "command": "domain-generators.update-barrel",
          "group": "7+update-barrel@1",
          "when": "resourcePath =~ /libs[/\\\\].+[index|testing]\\.ts$/"
        }
      ],
      "commandPalette": [
        {
          "command": "domain-generators.appGroupingFolder",
          "when": "never"
        },
        {
          "command": "domain-generators.domainGroupingFolder",
          "when": "never"
        },
        {
          "command": "domain-generators.moveGroupingFolder",
          "when": "never"
        },
        {
          "command": "domain-generators.removeGroupingFolder",
          "when": "never"
        },
        {
          "command": "domain-generators.ngRemoveLibrary",
          "when": "never"
        },
        {
          "command": "domain-generators.mockFile",
          "when": "never"
        },
        {
          "command": "domain-generators.ngApplicationLayer",
          "when": "never"
        },
        {
          "command": "domain-generators.ngComponent",
          "when": "never"
        },
        {
          "command": "domain-generators.ngDataAccessLayer",
          "when": "never"
        },
        {
          "command": "domain-generators.ngDirective",
          "when": "never"
        },
        {
          "command": "domain-generators.ngDomainLayer",
          "when": "never"
        },
        {
          "command": "domain-generators.ngUtilLayer",
          "when": "never"
        },
        {
          "command": "domain-generators.domainTest",
          "when": "never"
        },
        {
          "command": "domain-generators.lint",
          "when": "never"
        },
        {
          "command": "domain-generators.test",
          "when": "never"
        },
        {
          "command": "domain-generators.ct",
          "when": "never"
        },
        {
          "command": "domain-generators.e2e",
          "when": "never"
        },
        {
          "command": "domain-generators.update-barrel",
          "when": "never"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Domain generators",
      "properties": {
        "domainGenerators.style": {
          "type": "string",
          "default": "scss",
          "enum": [
            "scss",
            "less",
            "css"
          ]
        },
        "domainGenerators.unitTestType": {
          "type": "string",
          "default": "noTest",
          "enum": [
            "noTest",
            "testBed",
            "noTestBed"
          ]
        },
        "domainGenerators.mountType": {
          "type": "string",
          "default": "story",
          "enum": [
            "component",
            "story"
          ]
        },
        "domainGenerators.displayBlock.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Specifies if the add components style will contain `:host { display: block; }`"
        },
        "domainGenerators.buildable.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Specifies if the buildable flag is used when creating domain libraries"
        },
        "domainGenerators.publishable.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Specifies if the publishable flag is used when creating domain libraries. This is not recommended when enableIvy is true"
        },
        "domainGenerators.strict.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Specifies if the strict flag is used when creating domain libraries."
        },
        "domainGenerators.enableIvy.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Specifies if the enableIvy flag is used when creating domain libraries."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "package": "npx vsce package --no-yarn -o domain-generators.vsix",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "test": "jest ./src",
    "e2e-test": "npm run compile && node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@angular/cli": "^13.0.4",
    "@types/glob": "^7.2.0",
    "@types/jest": "^27.0.3",
    "@types/mocha": "^9.0.0",
    "@types/node": "16.x",
    "@types/vscode": "^1.62.0",
    "@typescript-eslint/eslint-plugin": "^5.5.0",
    "@typescript-eslint/parser": "^5.5.0",
    "eslint": "^8.4.0",
    "glob": "^7.2.0",
    "jest": "^27.4.3",
    "mocha": "^9.1.3",
    "ts-jest": "^27.0.7",
    "typescript": "^4.5.2",
    "vscode-test": "^1.6.1"
  }
}
